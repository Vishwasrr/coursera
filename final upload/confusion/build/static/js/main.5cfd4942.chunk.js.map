{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","required","val","length","maxLength","len","RenderDish","in","transformProps","exitTransform","object","description","RenderComments","commentsArray","postComment","dishId","comments","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalopen","toggleModal","bind","handleSubmit","this","setState","values","rating","Fragment","outline","isOpen","toggle","onSubmit","htmlFor","xs","type","model","placeholder","min","max","validators","show","messages","text","minLength","textarea","rows","color","Component","DishDetail","isNumber","isNaN","Number","validEmail","test","Contact","console","log","JSON","stringify","alert","postFeedback","resetFeedbackForm","href","role","md","size","offset","check","checkbox","select","Header","isNavOpen","isModalOpen","toggleNav","handleLogin","event","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","RenderCard","item","designation","Home","dishesLoading","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","About","leaders","RenderLeader","tag","left","middle","body","heading","RenderLeaders","list","title","addComment","payload","dispatch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishesErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","errorMessage","json","catch","message","actions","reset","feedback","newFeedback","Object","assign","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5cfd4942.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className='col-12' >\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . . </p>\r\n        </div>\r\n    )\r\n}\r\n","export const baseUrl = 'http://localhost:3001/'\r\n","import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardImgOverlay,\r\n    CardTitle,\r\n    Breadcrumb, BreadcrumbItem,\r\n    CardImg,\r\n} from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent'\r\nimport {baseUrl} from '../shared/baseUrl'\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>  \r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n\r\n            </div>\r\n        )\r\n    })\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\" >\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\" >\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}  </h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Row, Col, Label, Card, CardImg, Button, ModalHeader, ModalBody, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1 \">\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%) '\r\n                }}>\r\n\r\n                <Card>\r\n                    <CardImg width=\"100%\" object src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction RenderComments({ commentsArray, postComment, dishId }) {\r\n\r\n    const comments = commentsArray.map((comment) => {\r\n        return (\r\n            <div>\r\n                <li key={comment.id} className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {comment.comment}\r\n                        <br></br>\r\n                        <br></br>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <span>--{comment.author},</span>\r\n                        <span> {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</span>\r\n                        <br></br>\r\n                        <br></br>\r\n                    </div>\r\n                </li>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (commentsArray != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1 \">\r\n                <h4>Comments</h4>\r\n                <div className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        <Fade in>\r\n                            {comments}\r\n                            {comments.author}\r\n                        </Fade>\r\n                    </Stagger>\r\n                </div>\r\n\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalopen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalopen: !this.state.isModalopen\r\n        })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal()\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-edit fa-lg\"></span> Comment Submit\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalopen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n\r\n                                <Label htmlFor=\"rating\" xs={12}>Rating</Label>\r\n                                <Col xs={12}>\r\n                                    <Control type=\"number\" model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        placeholder=\"1-5\"\r\n                                        className=\"form-control\"\r\n                                        min={1}\r\n                                        max={5}\r\n                                        validators={{\r\n                                            required\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".rating\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"yourname\" xs={12}>Your Name</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required;',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" xs={12}>Comment</Label>\r\n                                <Col xs={12}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col >\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\" >\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\" >\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}  </h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row \">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments commentsArray={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"row\"></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React, { Component } from \"react\";\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Button,\r\n    // FormGroup,\r\n    Label,\r\n    // Input,\r\n    Col,\r\n    Row,\r\n} from \"reactstrap\";\r\nimport {\r\n    Control, Form, Errors,\r\n    // actions\r\n} from \"react-redux-form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        alert(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n                            <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n                            <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a\r\n                                role=\"button\"\r\n                                className=\"btn btn-primary\"\r\n                                href=\"tel:+85212345678\"\r\n                            >\r\n                                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"live:confusion\"\r\n                            >\r\n                                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n                            <a\r\n                                role=\"button\"\r\n                                className=\"btn btn-success\"\r\n                                href=\"mailto:confusion@food.net\"\r\n                            >\r\n                                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form\r\n                            model=\"feedback\"\r\n                            onSubmit={(values) => this.handleSubmit(values)}\r\n                        >\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>\r\n                                    First Name\r\n                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model=\".firstname\"\r\n                                        id=\"firstname\"\r\n                                        name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minLength: \"Must be greater than 2 characters\",\r\n                                            maxLength: \"Must be 15 characters or less\",\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>\r\n                                    Last Name\r\n                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model=\".lastname\"\r\n                                        id=\"lastname\"\r\n                                        name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minLength: \"Must be greater than 2 characters\",\r\n                                            maxLength: \"Must be 15 characters or less\",\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>\r\n                                    Contact Tel.\r\n                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model=\".telnum\"\r\n                                        id=\"telnum\"\r\n                                        name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber,\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minLength: \"Must be greater than 2 numbers\",\r\n                                            maxLength: \"Must be 15 numbers or less\",\r\n                                            isNumber: \"Must be a number\",\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>\r\n                                    Email\r\n                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model=\".email\"\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail,\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            validEmail: \"Invalid Email Address\",\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox\r\n                                                model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            />{\" \"}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select\r\n                                        model=\".contactType\"\r\n                                        name=\"contactType\"\r\n                                        className=\"form-control\"\r\n                                    >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>\r\n                                    Your Feedback\r\n                </Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea\r\n                                        model=\".message\"\r\n                                        id=\"message\"\r\n                                        name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                  </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, FormGroup, Form, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this)\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleLogin = this.handleLogin.bind(this)\r\n    }\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        })\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal()\r\n        alert(\"Username: \" + this.username.value + \"Password:\" + this.password.value + \"Remember: \" + this.remember.checked)\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand='md'>\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar >\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact us\r\n                                </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\" >\r\n                        <div className=\"row row-header\" >\r\n                            <div className=\"col-12 col-sm-6\" >\r\n                                <h1>Ristorante Con Fusion</h1> </div>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion of experince. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef= {(input) => this.username = input } />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef = {(input) => this.password = input } />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef = {(input) => this.remember = input}/>\r\n                                           Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/Contact Us\">Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a><a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport {\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    } else if (errMess) {\r\n        return <h4>{errMess}</h4>;\r\n    } else\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: \"scale(0.5) translateY(-50%)\",\r\n                }}\r\n            >\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? (\r\n                            <CardSubtitle>{item.designation}</CardSubtitle>\r\n                        ) : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.dish}\r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishes}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.promotion}\r\n                        isLoading={props.promoLoading}\r\n                        errMess={props.promoErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard\r\n                        item={props.leader}\r\n                        isLoading={props.leadersLoading}\r\n                        errMess={props.leadersErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home","import React from \"react\";\r\nimport {\r\n    Breadcrumb,\r\n    BreadcrumbItem,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Media,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport {\r\n    // FadeTransform\r\n    Fade, Stagger\r\n} from \"react-animation-components\";\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return <RenderLeader leader={leader} />;\r\n    });\r\n\r\n    function RenderLeader({ leader }) {\r\n        return (\r\n            <Fade in>\r\n                <Media tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        );\r\n    }\r\n\r\n    function RenderLeaders() {\r\n        if (props.leaders.isLoading) {\r\n            return <Loading />;\r\n        } else if (props.leaders.errMess) {\r\n            return <h4>{props.leaders.errMess}</h4>;\r\n        } else\r\n            return (\r\n                <Media list>\r\n                    <Stagger in>{leaders}</Stagger>\r\n                </Media>\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>\r\n                        Started in 2010, Ristorante con Fusion quickly established itself as\r\n                        a culinary icon par excellence in Hong Kong. With its unique brand\r\n                        of world fusion cuisine that can be found nowhere else, it enjoys\r\n                        patronage from the A-list clientele in Hong Kong. Featuring four of\r\n                        the best three-star Michelin chefs in the world, you never know what\r\n                        will arrive on your plate the next time you visit us.\r\n          </p>\r\n                    <p>\r\n                        The restaurant traces its humble beginnings to{\" \"}\r\n                        <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">\r\n                            Facts At a Glance\r\n            </CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">\r\n                                    You better cut the pizza in four pieces because I'm not hungry\r\n                                    enough to eat six.\r\n                </p>\r\n                                <footer className=\"blockquote-footer\">\r\n                                    Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                                        The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                                        2014\r\n                  </cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <RenderLeaders />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment,\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment,\r\n    };\r\n\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + \"comments\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n    })\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((response) => dispatch(addComment(response)))\r\n        .catch((error) => {\r\n            console.log(\"Post comments: \" + error.message);\r\n            alert(\"Comments could not be posted:\\n\" + error.message);\r\n        });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + \"dishes\")\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((dishes) => dispatch(addDishes(dishes)))\r\n        .catch((error) => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => (dispatch) => ({\r\n    type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess,\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes,\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + \"comments\")\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n\r\n        .then((response) => response.json())\r\n        .then((comments) => dispatch(addComments(comments)))\r\n        .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess,\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments,\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + \"promotions\")\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n\r\n        .then((response) => response.json())\r\n        .then((promos) => dispatch(addPromos(promos)))\r\n        .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => (dispatch) => ({\r\n    type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess,\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos,\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + \"leaders\")\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                var errmess = new Error(error.errorMessage);\r\n                throw errmess;\r\n            }\r\n        )\r\n\r\n        .then((response) => response.json())\r\n        .then((leaders) => dispatch(addLeaders(leaders)))\r\n        .catch((error) => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => (dispatch) => ({\r\n    type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess,\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders,\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    const newFeedback = Object.assign(\r\n        { date: new Date().toISOString() },\r\n        feedback\r\n    );\r\n\r\n    return fetch(baseUrl + \"feedback\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        credentials: \"same-origin\",\r\n    })\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error(\r\n                        \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((response) => dispatch(addComment(response)))\r\n        .catch((error) => {\r\n            console.log(\"Post feedback: \" + error.message);\r\n            alert(\"Feedback could not be posted:\\n\" + error.message);\r\n        });\r\n};","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";","import React, { Component } from \"react\";\r\nimport Menu from \"./MenuComponent\";\r\nimport { actions } from \"react-redux-form\";\r\nimport Dishdetail from \"./DishdetailComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  postComment,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders,\r\n  postFeedback,\r\n} from \"../redux/ActionCreators\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)),\r\n\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset(\"feedback\"));\r\n  },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => {\r\n    dispatch(fetchLeaders());\r\n  },\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n});\r\n\r\nclass Main extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(\r\n              (promo) => promo.featured\r\n            )[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={\r\n            this.props.leaders.leaders.filter((leader) => leader.featured)[0]\r\n          }\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <Dishdetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              (dish) => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          comments={this.props.comments.comments.filter(\r\n            (comment) => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            key={this.props.location.key}\r\n            classNames=\"page\"\r\n            timeout={300}\r\n          >\r\n            <Switch location={this.props.location}>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route\r\n                exact\r\n                path=\"/aboutus\"\r\n                component={() => <About leaders={this.props.leaders} />}\r\n              />\r\n\r\n              <Route\r\n                exact\r\n                path=\"/menu\"\r\n                component={() => <Menu dishes={this.props.dishes} />}\r\n              />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route\r\n                exact\r\n                path=\"/contactus\"\r\n                component={() => (\r\n                  <Contact\r\n                    resetFeedbackForm={this.props.resetFeedbackForm}\r\n                    postFeedback={this.props.postFeedback}\r\n                  />\r\n                )}\r\n              />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Dishes = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n            // break\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n            // break\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload}\r\n            // break\r\n        default:\r\n            return state\r\n    }\r\n}","// import { COMMENTS } from '../shared/comments'\r\nimport * as ActionTypes from './ActionTypes'\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload }\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload, comments: [] }\r\n            // break\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload\r\n            // comment.id = state.comments.length\r\n            // comment.date = new Date().toISOString()\r\n            // console.log(\"Comment: \", comment);\r\n            return { ...state, comments: state.comments.concat(comment) }\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload }\r\n            // break\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n            // break\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, promotions: [] }\r\n            // break\r\n        default:\r\n            return state\r\n    }\r\n}","// import { LEADERS } from \"../shared/leaders\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Leaders = (\r\n    state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: [],\r\n    },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: null,\r\n                leaders: action.payload,\r\n            };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                errMess: action.payload,\r\n                leaders: [],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel',\r\n    message: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { ConfigureStore } from './redux/configureStore'\n\nconst store = ConfigureStore()\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport {createForms} from 'react-redux-form'\r\nimport {Dishes} from './dishes';\r\nimport {Comments} from './comments' \r\nimport {Promotions} from './promotions'\r\nimport {Leaders} from './leaders'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport {InitialFeedback} from './forms'\r\n// import { Reducer, initialState } from './reducer'\r\n\r\nexport const ConfigureStore = () => {\r\nconst store = createStore(\r\n    combineReducers({\r\n        dishes: Dishes,\r\n        comments: Comments,\r\n        promotions: Promotions,\r\n        leaders: Leaders,\r\n        ...createForms({\r\n            feedback: InitialFeedback\r\n        })\r\n    }),\r\n    applyMiddleware(thunk, logger) \r\n)\r\n\r\nreturn store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}